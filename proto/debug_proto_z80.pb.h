// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: debug_proto_z80.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_debug_5fproto_5fz80_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_debug_5fproto_5fz80_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/empty.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_debug_5fproto_5fz80_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_debug_5fproto_5fz80_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[17]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_debug_5fproto_5fz80_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_debug_5fproto_5fz80_2eproto_metadata_getter(int index);
namespace idadebug {
class AnyRegValue;
struct AnyRegValueDefaultTypeInternal;
extern AnyRegValueDefaultTypeInternal _AnyRegValue_default_instance_;
class Callstack;
struct CallstackDefaultTypeInternal;
extern CallstackDefaultTypeInternal _Callstack_default_instance_;
class Changed;
struct ChangedDefaultTypeInternal;
extern ChangedDefaultTypeInternal _Changed_default_instance_;
class Changed_ChangedEntry_DoNotUse;
struct Changed_ChangedEntry_DoNotUseDefaultTypeInternal;
extern Changed_ChangedEntry_DoNotUseDefaultTypeInternal _Changed_ChangedEntry_DoNotUse_default_instance_;
class DbgBreakpoint;
struct DbgBreakpointDefaultTypeInternal;
extern DbgBreakpointDefaultTypeInternal _DbgBreakpoint_default_instance_;
class DbgBreakpoints;
struct DbgBreakpointsDefaultTypeInternal;
extern DbgBreakpointsDefaultTypeInternal _DbgBreakpoints_default_instance_;
class GpReg;
struct GpRegDefaultTypeInternal;
extern GpRegDefaultTypeInternal _GpReg_default_instance_;
class GpRegValue;
struct GpRegValueDefaultTypeInternal;
extern GpRegValueDefaultTypeInternal _GpRegValue_default_instance_;
class GpRegs;
struct GpRegsDefaultTypeInternal;
extern GpRegsDefaultTypeInternal _GpRegs_default_instance_;
class MemData;
struct MemDataDefaultTypeInternal;
extern MemDataDefaultTypeInternal _MemData_default_instance_;
class MemoryAD;
struct MemoryADDefaultTypeInternal;
extern MemoryADDefaultTypeInternal _MemoryAD_default_instance_;
class MemoryAS;
struct MemoryASDefaultTypeInternal;
extern MemoryASDefaultTypeInternal _MemoryAS_default_instance_;
class PauseChanged;
struct PauseChangedDefaultTypeInternal;
extern PauseChangedDefaultTypeInternal _PauseChanged_default_instance_;
class PauseChanged_ChangedEntry_DoNotUse;
struct PauseChanged_ChangedEntry_DoNotUseDefaultTypeInternal;
extern PauseChanged_ChangedEntry_DoNotUseDefaultTypeInternal _PauseChanged_ChangedEntry_DoNotUse_default_instance_;
class SoundBankMap;
struct SoundBankMapDefaultTypeInternal;
extern SoundBankMapDefaultTypeInternal _SoundBankMap_default_instance_;
class SoundBankMap_RangeEntry_DoNotUse;
struct SoundBankMap_RangeEntry_DoNotUseDefaultTypeInternal;
extern SoundBankMap_RangeEntry_DoNotUseDefaultTypeInternal _SoundBankMap_RangeEntry_DoNotUse_default_instance_;
class SoundBankRange;
struct SoundBankRangeDefaultTypeInternal;
extern SoundBankRangeDefaultTypeInternal _SoundBankRange_default_instance_;
}  // namespace idadebug
PROTOBUF_NAMESPACE_OPEN
template<> ::idadebug::AnyRegValue* Arena::CreateMaybeMessage<::idadebug::AnyRegValue>(Arena*);
template<> ::idadebug::Callstack* Arena::CreateMaybeMessage<::idadebug::Callstack>(Arena*);
template<> ::idadebug::Changed* Arena::CreateMaybeMessage<::idadebug::Changed>(Arena*);
template<> ::idadebug::Changed_ChangedEntry_DoNotUse* Arena::CreateMaybeMessage<::idadebug::Changed_ChangedEntry_DoNotUse>(Arena*);
template<> ::idadebug::DbgBreakpoint* Arena::CreateMaybeMessage<::idadebug::DbgBreakpoint>(Arena*);
template<> ::idadebug::DbgBreakpoints* Arena::CreateMaybeMessage<::idadebug::DbgBreakpoints>(Arena*);
template<> ::idadebug::GpReg* Arena::CreateMaybeMessage<::idadebug::GpReg>(Arena*);
template<> ::idadebug::GpRegValue* Arena::CreateMaybeMessage<::idadebug::GpRegValue>(Arena*);
template<> ::idadebug::GpRegs* Arena::CreateMaybeMessage<::idadebug::GpRegs>(Arena*);
template<> ::idadebug::MemData* Arena::CreateMaybeMessage<::idadebug::MemData>(Arena*);
template<> ::idadebug::MemoryAD* Arena::CreateMaybeMessage<::idadebug::MemoryAD>(Arena*);
template<> ::idadebug::MemoryAS* Arena::CreateMaybeMessage<::idadebug::MemoryAS>(Arena*);
template<> ::idadebug::PauseChanged* Arena::CreateMaybeMessage<::idadebug::PauseChanged>(Arena*);
template<> ::idadebug::PauseChanged_ChangedEntry_DoNotUse* Arena::CreateMaybeMessage<::idadebug::PauseChanged_ChangedEntry_DoNotUse>(Arena*);
template<> ::idadebug::SoundBankMap* Arena::CreateMaybeMessage<::idadebug::SoundBankMap>(Arena*);
template<> ::idadebug::SoundBankMap_RangeEntry_DoNotUse* Arena::CreateMaybeMessage<::idadebug::SoundBankMap_RangeEntry_DoNotUse>(Arena*);
template<> ::idadebug::SoundBankRange* Arena::CreateMaybeMessage<::idadebug::SoundBankRange>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace idadebug {

enum GpRegsEnum : int {
  A = 0,
  AF = 1,
  B = 2,
  C = 3,
  BC = 4,
  D = 5,
  E = 6,
  DE = 7,
  H = 8,
  L = 9,
  HL = 10,
  IXH = 11,
  IXL = 12,
  IX = 13,
  IYH = 14,
  IYL = 15,
  IY = 16,
  AF2 = 17,
  BC2 = 18,
  DE2 = 19,
  HL2 = 20,
  I = 21,
  R = 22,
  SP = 23,
  IP = 24,
  BANK = 25,
  GpRegsEnum_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  GpRegsEnum_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool GpRegsEnum_IsValid(int value);
constexpr GpRegsEnum GpRegsEnum_MIN = A;
constexpr GpRegsEnum GpRegsEnum_MAX = BANK;
constexpr int GpRegsEnum_ARRAYSIZE = GpRegsEnum_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GpRegsEnum_descriptor();
template<typename T>
inline const std::string& GpRegsEnum_Name(T enum_t_value) {
  static_assert(::std::is_same<T, GpRegsEnum>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function GpRegsEnum_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    GpRegsEnum_descriptor(), enum_t_value);
}
inline bool GpRegsEnum_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, GpRegsEnum* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<GpRegsEnum>(
    GpRegsEnum_descriptor(), name, value);
}
enum BpType : int {
  DUMMY = 0,
  BP_PC = 1,
  BP_READ = 2,
  BP_WRITE = 3,
  BpType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  BpType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool BpType_IsValid(int value);
constexpr BpType BpType_MIN = DUMMY;
constexpr BpType BpType_MAX = BP_WRITE;
constexpr int BpType_ARRAYSIZE = BpType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* BpType_descriptor();
template<typename T>
inline const std::string& BpType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, BpType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function BpType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    BpType_descriptor(), enum_t_value);
}
inline bool BpType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, BpType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<BpType>(
    BpType_descriptor(), name, value);
}
// ===================================================================

class GpReg PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:idadebug.GpReg) */ {
 public:
  inline GpReg() : GpReg(nullptr) {}
  virtual ~GpReg();
  explicit constexpr GpReg(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GpReg(const GpReg& from);
  GpReg(GpReg&& from) noexcept
    : GpReg() {
    *this = ::std::move(from);
  }

  inline GpReg& operator=(const GpReg& from) {
    CopyFrom(from);
    return *this;
  }
  inline GpReg& operator=(GpReg&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GpReg& default_instance() {
    return *internal_default_instance();
  }
  static inline const GpReg* internal_default_instance() {
    return reinterpret_cast<const GpReg*>(
               &_GpReg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GpReg& a, GpReg& b) {
    a.Swap(&b);
  }
  inline void Swap(GpReg* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GpReg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GpReg* New() const final {
    return CreateMaybeMessage<GpReg>(nullptr);
  }

  GpReg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GpReg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GpReg& from);
  void MergeFrom(const GpReg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GpReg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "idadebug.GpReg";
  }
  protected:
  explicit GpReg(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_debug_5fproto_5fz80_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRegFieldNumber = 1,
  };
  // .idadebug.GpRegsEnum reg = 1;
  void clear_reg();
  ::idadebug::GpRegsEnum reg() const;
  void set_reg(::idadebug::GpRegsEnum value);
  private:
  ::idadebug::GpRegsEnum _internal_reg() const;
  void _internal_set_reg(::idadebug::GpRegsEnum value);
  public:

  // @@protoc_insertion_point(class_scope:idadebug.GpReg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int reg_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_debug_5fproto_5fz80_2eproto;
};
// -------------------------------------------------------------------

class GpRegs PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:idadebug.GpRegs) */ {
 public:
  inline GpRegs() : GpRegs(nullptr) {}
  virtual ~GpRegs();
  explicit constexpr GpRegs(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GpRegs(const GpRegs& from);
  GpRegs(GpRegs&& from) noexcept
    : GpRegs() {
    *this = ::std::move(from);
  }

  inline GpRegs& operator=(const GpRegs& from) {
    CopyFrom(from);
    return *this;
  }
  inline GpRegs& operator=(GpRegs&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GpRegs& default_instance() {
    return *internal_default_instance();
  }
  static inline const GpRegs* internal_default_instance() {
    return reinterpret_cast<const GpRegs*>(
               &_GpRegs_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(GpRegs& a, GpRegs& b) {
    a.Swap(&b);
  }
  inline void Swap(GpRegs* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GpRegs* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GpRegs* New() const final {
    return CreateMaybeMessage<GpRegs>(nullptr);
  }

  GpRegs* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GpRegs>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GpRegs& from);
  void MergeFrom(const GpRegs& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GpRegs* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "idadebug.GpRegs";
  }
  protected:
  explicit GpRegs(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_debug_5fproto_5fz80_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAFieldNumber = 1,
    kAFFieldNumber = 2,
    kBFieldNumber = 3,
    kCFieldNumber = 4,
    kBCFieldNumber = 5,
    kDFieldNumber = 6,
    kEFieldNumber = 7,
    kDEFieldNumber = 8,
    kHFieldNumber = 9,
    kLFieldNumber = 10,
    kHLFieldNumber = 11,
    kIXHFieldNumber = 12,
    kIXLFieldNumber = 13,
    kIXFieldNumber = 14,
    kIYHFieldNumber = 15,
    kIYLFieldNumber = 16,
    kIYFieldNumber = 17,
    kAF2FieldNumber = 18,
    kBC2FieldNumber = 19,
    kDE2FieldNumber = 20,
    kHL2FieldNumber = 21,
    kIFieldNumber = 22,
    kRFieldNumber = 23,
    kSPFieldNumber = 24,
    kIPFieldNumber = 25,
    kBANKFieldNumber = 26,
  };
  // uint32 A = 1;
  void clear_a();
  ::PROTOBUF_NAMESPACE_ID::uint32 a() const;
  void set_a(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_a() const;
  void _internal_set_a(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 AF = 2;
  void clear_af();
  ::PROTOBUF_NAMESPACE_ID::uint32 af() const;
  void set_af(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_af() const;
  void _internal_set_af(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 B = 3;
  void clear_b();
  ::PROTOBUF_NAMESPACE_ID::uint32 b() const;
  void set_b(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_b() const;
  void _internal_set_b(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 C = 4;
  void clear_c();
  ::PROTOBUF_NAMESPACE_ID::uint32 c() const;
  void set_c(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_c() const;
  void _internal_set_c(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 BC = 5;
  void clear_bc();
  ::PROTOBUF_NAMESPACE_ID::uint32 bc() const;
  void set_bc(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bc() const;
  void _internal_set_bc(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 D = 6;
  void clear_d();
  ::PROTOBUF_NAMESPACE_ID::uint32 d() const;
  void set_d(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_d() const;
  void _internal_set_d(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 E = 7;
  void clear_e();
  ::PROTOBUF_NAMESPACE_ID::uint32 e() const;
  void set_e(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_e() const;
  void _internal_set_e(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 DE = 8;
  void clear_de();
  ::PROTOBUF_NAMESPACE_ID::uint32 de() const;
  void set_de(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_de() const;
  void _internal_set_de(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 H = 9;
  void clear_h();
  ::PROTOBUF_NAMESPACE_ID::uint32 h() const;
  void set_h(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_h() const;
  void _internal_set_h(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 L = 10;
  void clear_l();
  ::PROTOBUF_NAMESPACE_ID::uint32 l() const;
  void set_l(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_l() const;
  void _internal_set_l(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 HL = 11;
  void clear_hl();
  ::PROTOBUF_NAMESPACE_ID::uint32 hl() const;
  void set_hl(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hl() const;
  void _internal_set_hl(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 IXH = 12;
  void clear_ixh();
  ::PROTOBUF_NAMESPACE_ID::uint32 ixh() const;
  void set_ixh(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ixh() const;
  void _internal_set_ixh(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 IXL = 13;
  void clear_ixl();
  ::PROTOBUF_NAMESPACE_ID::uint32 ixl() const;
  void set_ixl(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ixl() const;
  void _internal_set_ixl(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 IX = 14;
  void clear_ix();
  ::PROTOBUF_NAMESPACE_ID::uint32 ix() const;
  void set_ix(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ix() const;
  void _internal_set_ix(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 IYH = 15;
  void clear_iyh();
  ::PROTOBUF_NAMESPACE_ID::uint32 iyh() const;
  void set_iyh(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_iyh() const;
  void _internal_set_iyh(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 IYL = 16;
  void clear_iyl();
  ::PROTOBUF_NAMESPACE_ID::uint32 iyl() const;
  void set_iyl(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_iyl() const;
  void _internal_set_iyl(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 IY = 17;
  void clear_iy();
  ::PROTOBUF_NAMESPACE_ID::uint32 iy() const;
  void set_iy(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_iy() const;
  void _internal_set_iy(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 AF2 = 18;
  void clear_af2();
  ::PROTOBUF_NAMESPACE_ID::uint32 af2() const;
  void set_af2(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_af2() const;
  void _internal_set_af2(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 BC2 = 19;
  void clear_bc2();
  ::PROTOBUF_NAMESPACE_ID::uint32 bc2() const;
  void set_bc2(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bc2() const;
  void _internal_set_bc2(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 DE2 = 20;
  void clear_de2();
  ::PROTOBUF_NAMESPACE_ID::uint32 de2() const;
  void set_de2(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_de2() const;
  void _internal_set_de2(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 HL2 = 21;
  void clear_hl2();
  ::PROTOBUF_NAMESPACE_ID::uint32 hl2() const;
  void set_hl2(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hl2() const;
  void _internal_set_hl2(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 I = 22;
  void clear_i();
  ::PROTOBUF_NAMESPACE_ID::uint32 i() const;
  void set_i(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_i() const;
  void _internal_set_i(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 R = 23;
  void clear_r();
  ::PROTOBUF_NAMESPACE_ID::uint32 r() const;
  void set_r(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_r() const;
  void _internal_set_r(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 SP = 24;
  void clear_sp();
  ::PROTOBUF_NAMESPACE_ID::uint32 sp() const;
  void set_sp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_sp() const;
  void _internal_set_sp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 IP = 25;
  void clear_ip();
  ::PROTOBUF_NAMESPACE_ID::uint32 ip() const;
  void set_ip(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ip() const;
  void _internal_set_ip(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 BANK = 26;
  void clear_bank();
  ::PROTOBUF_NAMESPACE_ID::uint32 bank() const;
  void set_bank(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bank() const;
  void _internal_set_bank(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:idadebug.GpRegs)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 a_;
  ::PROTOBUF_NAMESPACE_ID::uint32 af_;
  ::PROTOBUF_NAMESPACE_ID::uint32 b_;
  ::PROTOBUF_NAMESPACE_ID::uint32 c_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bc_;
  ::PROTOBUF_NAMESPACE_ID::uint32 d_;
  ::PROTOBUF_NAMESPACE_ID::uint32 e_;
  ::PROTOBUF_NAMESPACE_ID::uint32 de_;
  ::PROTOBUF_NAMESPACE_ID::uint32 h_;
  ::PROTOBUF_NAMESPACE_ID::uint32 l_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hl_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ixh_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ixl_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ix_;
  ::PROTOBUF_NAMESPACE_ID::uint32 iyh_;
  ::PROTOBUF_NAMESPACE_ID::uint32 iyl_;
  ::PROTOBUF_NAMESPACE_ID::uint32 iy_;
  ::PROTOBUF_NAMESPACE_ID::uint32 af2_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bc2_;
  ::PROTOBUF_NAMESPACE_ID::uint32 de2_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hl2_;
  ::PROTOBUF_NAMESPACE_ID::uint32 i_;
  ::PROTOBUF_NAMESPACE_ID::uint32 r_;
  ::PROTOBUF_NAMESPACE_ID::uint32 sp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ip_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bank_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_debug_5fproto_5fz80_2eproto;
};
// -------------------------------------------------------------------

class GpRegValue PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:idadebug.GpRegValue) */ {
 public:
  inline GpRegValue() : GpRegValue(nullptr) {}
  virtual ~GpRegValue();
  explicit constexpr GpRegValue(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GpRegValue(const GpRegValue& from);
  GpRegValue(GpRegValue&& from) noexcept
    : GpRegValue() {
    *this = ::std::move(from);
  }

  inline GpRegValue& operator=(const GpRegValue& from) {
    CopyFrom(from);
    return *this;
  }
  inline GpRegValue& operator=(GpRegValue&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GpRegValue& default_instance() {
    return *internal_default_instance();
  }
  static inline const GpRegValue* internal_default_instance() {
    return reinterpret_cast<const GpRegValue*>(
               &_GpRegValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(GpRegValue& a, GpRegValue& b) {
    a.Swap(&b);
  }
  inline void Swap(GpRegValue* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GpRegValue* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GpRegValue* New() const final {
    return CreateMaybeMessage<GpRegValue>(nullptr);
  }

  GpRegValue* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GpRegValue>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GpRegValue& from);
  void MergeFrom(const GpRegValue& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GpRegValue* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "idadebug.GpRegValue";
  }
  protected:
  explicit GpRegValue(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_debug_5fproto_5fz80_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIndexFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // .idadebug.GpRegsEnum index = 1;
  void clear_index();
  ::idadebug::GpRegsEnum index() const;
  void set_index(::idadebug::GpRegsEnum value);
  private:
  ::idadebug::GpRegsEnum _internal_index() const;
  void _internal_set_index(::idadebug::GpRegsEnum value);
  public:

  // uint32 value = 2;
  void clear_value();
  ::PROTOBUF_NAMESPACE_ID::uint32 value() const;
  void set_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_value() const;
  void _internal_set_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:idadebug.GpRegValue)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int index_;
  ::PROTOBUF_NAMESPACE_ID::uint32 value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_debug_5fproto_5fz80_2eproto;
};
// -------------------------------------------------------------------

class MemoryAS PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:idadebug.MemoryAS) */ {
 public:
  inline MemoryAS() : MemoryAS(nullptr) {}
  virtual ~MemoryAS();
  explicit constexpr MemoryAS(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MemoryAS(const MemoryAS& from);
  MemoryAS(MemoryAS&& from) noexcept
    : MemoryAS() {
    *this = ::std::move(from);
  }

  inline MemoryAS& operator=(const MemoryAS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MemoryAS& operator=(MemoryAS&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MemoryAS& default_instance() {
    return *internal_default_instance();
  }
  static inline const MemoryAS* internal_default_instance() {
    return reinterpret_cast<const MemoryAS*>(
               &_MemoryAS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MemoryAS& a, MemoryAS& b) {
    a.Swap(&b);
  }
  inline void Swap(MemoryAS* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MemoryAS* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MemoryAS* New() const final {
    return CreateMaybeMessage<MemoryAS>(nullptr);
  }

  MemoryAS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MemoryAS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MemoryAS& from);
  void MergeFrom(const MemoryAS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MemoryAS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "idadebug.MemoryAS";
  }
  protected:
  explicit MemoryAS(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_debug_5fproto_5fz80_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAddressFieldNumber = 1,
    kSizeFieldNumber = 2,
  };
  // uint32 address = 1;
  void clear_address();
  ::PROTOBUF_NAMESPACE_ID::uint32 address() const;
  void set_address(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_address() const;
  void _internal_set_address(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 size = 2;
  void clear_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 size() const;
  void set_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_size() const;
  void _internal_set_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:idadebug.MemoryAS)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 address_;
  ::PROTOBUF_NAMESPACE_ID::uint32 size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_debug_5fproto_5fz80_2eproto;
};
// -------------------------------------------------------------------

class MemoryAD PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:idadebug.MemoryAD) */ {
 public:
  inline MemoryAD() : MemoryAD(nullptr) {}
  virtual ~MemoryAD();
  explicit constexpr MemoryAD(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MemoryAD(const MemoryAD& from);
  MemoryAD(MemoryAD&& from) noexcept
    : MemoryAD() {
    *this = ::std::move(from);
  }

  inline MemoryAD& operator=(const MemoryAD& from) {
    CopyFrom(from);
    return *this;
  }
  inline MemoryAD& operator=(MemoryAD&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MemoryAD& default_instance() {
    return *internal_default_instance();
  }
  static inline const MemoryAD* internal_default_instance() {
    return reinterpret_cast<const MemoryAD*>(
               &_MemoryAD_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(MemoryAD& a, MemoryAD& b) {
    a.Swap(&b);
  }
  inline void Swap(MemoryAD* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MemoryAD* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MemoryAD* New() const final {
    return CreateMaybeMessage<MemoryAD>(nullptr);
  }

  MemoryAD* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MemoryAD>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MemoryAD& from);
  void MergeFrom(const MemoryAD& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MemoryAD* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "idadebug.MemoryAD";
  }
  protected:
  explicit MemoryAD(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_debug_5fproto_5fz80_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 2,
    kAddressFieldNumber = 1,
  };
  // bytes data = 2;
  void clear_data();
  const std::string& data() const;
  void set_data(const std::string& value);
  void set_data(std::string&& value);
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  std::string* mutable_data();
  std::string* release_data();
  void set_allocated_data(std::string* data);
  private:
  const std::string& _internal_data() const;
  void _internal_set_data(const std::string& value);
  std::string* _internal_mutable_data();
  public:

  // uint32 address = 1;
  void clear_address();
  ::PROTOBUF_NAMESPACE_ID::uint32 address() const;
  void set_address(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_address() const;
  void _internal_set_address(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:idadebug.MemoryAD)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr data_;
  ::PROTOBUF_NAMESPACE_ID::uint32 address_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_debug_5fproto_5fz80_2eproto;
};
// -------------------------------------------------------------------

class DbgBreakpoint PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:idadebug.DbgBreakpoint) */ {
 public:
  inline DbgBreakpoint() : DbgBreakpoint(nullptr) {}
  virtual ~DbgBreakpoint();
  explicit constexpr DbgBreakpoint(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DbgBreakpoint(const DbgBreakpoint& from);
  DbgBreakpoint(DbgBreakpoint&& from) noexcept
    : DbgBreakpoint() {
    *this = ::std::move(from);
  }

  inline DbgBreakpoint& operator=(const DbgBreakpoint& from) {
    CopyFrom(from);
    return *this;
  }
  inline DbgBreakpoint& operator=(DbgBreakpoint&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DbgBreakpoint& default_instance() {
    return *internal_default_instance();
  }
  static inline const DbgBreakpoint* internal_default_instance() {
    return reinterpret_cast<const DbgBreakpoint*>(
               &_DbgBreakpoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(DbgBreakpoint& a, DbgBreakpoint& b) {
    a.Swap(&b);
  }
  inline void Swap(DbgBreakpoint* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DbgBreakpoint* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DbgBreakpoint* New() const final {
    return CreateMaybeMessage<DbgBreakpoint>(nullptr);
  }

  DbgBreakpoint* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DbgBreakpoint>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DbgBreakpoint& from);
  void MergeFrom(const DbgBreakpoint& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DbgBreakpoint* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "idadebug.DbgBreakpoint";
  }
  protected:
  explicit DbgBreakpoint(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_debug_5fproto_5fz80_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeFieldNumber = 1,
    kBstartFieldNumber = 2,
    kBendFieldNumber = 3,
    kEnabledFieldNumber = 4,
    kIsForbidFieldNumber = 5,
  };
  // .idadebug.BpType type = 1;
  void clear_type();
  ::idadebug::BpType type() const;
  void set_type(::idadebug::BpType value);
  private:
  ::idadebug::BpType _internal_type() const;
  void _internal_set_type(::idadebug::BpType value);
  public:

  // uint32 bstart = 2;
  void clear_bstart();
  ::PROTOBUF_NAMESPACE_ID::uint32 bstart() const;
  void set_bstart(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bstart() const;
  void _internal_set_bstart(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 bend = 3;
  void clear_bend();
  ::PROTOBUF_NAMESPACE_ID::uint32 bend() const;
  void set_bend(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bend() const;
  void _internal_set_bend(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // bool enabled = 4;
  void clear_enabled();
  bool enabled() const;
  void set_enabled(bool value);
  private:
  bool _internal_enabled() const;
  void _internal_set_enabled(bool value);
  public:

  // bool is_forbid = 5;
  void clear_is_forbid();
  bool is_forbid() const;
  void set_is_forbid(bool value);
  private:
  bool _internal_is_forbid() const;
  void _internal_set_is_forbid(bool value);
  public:

  // @@protoc_insertion_point(class_scope:idadebug.DbgBreakpoint)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bstart_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bend_;
  bool enabled_;
  bool is_forbid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_debug_5fproto_5fz80_2eproto;
};
// -------------------------------------------------------------------

class DbgBreakpoints PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:idadebug.DbgBreakpoints) */ {
 public:
  inline DbgBreakpoints() : DbgBreakpoints(nullptr) {}
  virtual ~DbgBreakpoints();
  explicit constexpr DbgBreakpoints(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DbgBreakpoints(const DbgBreakpoints& from);
  DbgBreakpoints(DbgBreakpoints&& from) noexcept
    : DbgBreakpoints() {
    *this = ::std::move(from);
  }

  inline DbgBreakpoints& operator=(const DbgBreakpoints& from) {
    CopyFrom(from);
    return *this;
  }
  inline DbgBreakpoints& operator=(DbgBreakpoints&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DbgBreakpoints& default_instance() {
    return *internal_default_instance();
  }
  static inline const DbgBreakpoints* internal_default_instance() {
    return reinterpret_cast<const DbgBreakpoints*>(
               &_DbgBreakpoints_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(DbgBreakpoints& a, DbgBreakpoints& b) {
    a.Swap(&b);
  }
  inline void Swap(DbgBreakpoints* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DbgBreakpoints* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DbgBreakpoints* New() const final {
    return CreateMaybeMessage<DbgBreakpoints>(nullptr);
  }

  DbgBreakpoints* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DbgBreakpoints>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DbgBreakpoints& from);
  void MergeFrom(const DbgBreakpoints& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DbgBreakpoints* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "idadebug.DbgBreakpoints";
  }
  protected:
  explicit DbgBreakpoints(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_debug_5fproto_5fz80_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kListFieldNumber = 1,
  };
  // repeated .idadebug.DbgBreakpoint list = 1;
  int list_size() const;
  private:
  int _internal_list_size() const;
  public:
  void clear_list();
  ::idadebug::DbgBreakpoint* mutable_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::idadebug::DbgBreakpoint >*
      mutable_list();
  private:
  const ::idadebug::DbgBreakpoint& _internal_list(int index) const;
  ::idadebug::DbgBreakpoint* _internal_add_list();
  public:
  const ::idadebug::DbgBreakpoint& list(int index) const;
  ::idadebug::DbgBreakpoint* add_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::idadebug::DbgBreakpoint >&
      list() const;

  // @@protoc_insertion_point(class_scope:idadebug.DbgBreakpoints)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::idadebug::DbgBreakpoint > list_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_debug_5fproto_5fz80_2eproto;
};
// -------------------------------------------------------------------

class Callstack PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:idadebug.Callstack) */ {
 public:
  inline Callstack() : Callstack(nullptr) {}
  virtual ~Callstack();
  explicit constexpr Callstack(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Callstack(const Callstack& from);
  Callstack(Callstack&& from) noexcept
    : Callstack() {
    *this = ::std::move(from);
  }

  inline Callstack& operator=(const Callstack& from) {
    CopyFrom(from);
    return *this;
  }
  inline Callstack& operator=(Callstack&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Callstack& default_instance() {
    return *internal_default_instance();
  }
  static inline const Callstack* internal_default_instance() {
    return reinterpret_cast<const Callstack*>(
               &_Callstack_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(Callstack& a, Callstack& b) {
    a.Swap(&b);
  }
  inline void Swap(Callstack* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Callstack* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Callstack* New() const final {
    return CreateMaybeMessage<Callstack>(nullptr);
  }

  Callstack* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Callstack>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Callstack& from);
  void MergeFrom(const Callstack& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Callstack* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "idadebug.Callstack";
  }
  protected:
  explicit Callstack(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_debug_5fproto_5fz80_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCallstackFieldNumber = 1,
  };
  // repeated uint32 callstack = 1;
  int callstack_size() const;
  private:
  int _internal_callstack_size() const;
  public:
  void clear_callstack();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_callstack(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_callstack() const;
  void _internal_add_callstack(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_callstack();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 callstack(int index) const;
  void set_callstack(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_callstack(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      callstack() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_callstack();

  // @@protoc_insertion_point(class_scope:idadebug.Callstack)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > callstack_;
  mutable std::atomic<int> _callstack_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_debug_5fproto_5fz80_2eproto;
};
// -------------------------------------------------------------------

class AnyRegValue PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:idadebug.AnyRegValue) */ {
 public:
  inline AnyRegValue() : AnyRegValue(nullptr) {}
  virtual ~AnyRegValue();
  explicit constexpr AnyRegValue(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AnyRegValue(const AnyRegValue& from);
  AnyRegValue(AnyRegValue&& from) noexcept
    : AnyRegValue() {
    *this = ::std::move(from);
  }

  inline AnyRegValue& operator=(const AnyRegValue& from) {
    CopyFrom(from);
    return *this;
  }
  inline AnyRegValue& operator=(AnyRegValue&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AnyRegValue& default_instance() {
    return *internal_default_instance();
  }
  static inline const AnyRegValue* internal_default_instance() {
    return reinterpret_cast<const AnyRegValue*>(
               &_AnyRegValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(AnyRegValue& a, AnyRegValue& b) {
    a.Swap(&b);
  }
  inline void Swap(AnyRegValue* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AnyRegValue* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AnyRegValue* New() const final {
    return CreateMaybeMessage<AnyRegValue>(nullptr);
  }

  AnyRegValue* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AnyRegValue>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AnyRegValue& from);
  void MergeFrom(const AnyRegValue& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AnyRegValue* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "idadebug.AnyRegValue";
  }
  protected:
  explicit AnyRegValue(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_debug_5fproto_5fz80_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // uint32 value = 1;
  void clear_value();
  ::PROTOBUF_NAMESPACE_ID::uint32 value() const;
  void set_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_value() const;
  void _internal_set_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:idadebug.AnyRegValue)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_debug_5fproto_5fz80_2eproto;
};
// -------------------------------------------------------------------

class MemData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:idadebug.MemData) */ {
 public:
  inline MemData() : MemData(nullptr) {}
  virtual ~MemData();
  explicit constexpr MemData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MemData(const MemData& from);
  MemData(MemData&& from) noexcept
    : MemData() {
    *this = ::std::move(from);
  }

  inline MemData& operator=(const MemData& from) {
    CopyFrom(from);
    return *this;
  }
  inline MemData& operator=(MemData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MemData& default_instance() {
    return *internal_default_instance();
  }
  static inline const MemData* internal_default_instance() {
    return reinterpret_cast<const MemData*>(
               &_MemData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(MemData& a, MemData& b) {
    a.Swap(&b);
  }
  inline void Swap(MemData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MemData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MemData* New() const final {
    return CreateMaybeMessage<MemData>(nullptr);
  }

  MemData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MemData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MemData& from);
  void MergeFrom(const MemData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MemData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "idadebug.MemData";
  }
  protected:
  explicit MemData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_debug_5fproto_5fz80_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // bytes data = 1;
  void clear_data();
  const std::string& data() const;
  void set_data(const std::string& value);
  void set_data(std::string&& value);
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  std::string* mutable_data();
  std::string* release_data();
  void set_allocated_data(std::string* data);
  private:
  const std::string& _internal_data() const;
  void _internal_set_data(const std::string& value);
  std::string* _internal_mutable_data();
  public:

  // @@protoc_insertion_point(class_scope:idadebug.MemData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr data_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_debug_5fproto_5fz80_2eproto;
};
// -------------------------------------------------------------------

class SoundBankRange PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:idadebug.SoundBankRange) */ {
 public:
  inline SoundBankRange() : SoundBankRange(nullptr) {}
  virtual ~SoundBankRange();
  explicit constexpr SoundBankRange(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SoundBankRange(const SoundBankRange& from);
  SoundBankRange(SoundBankRange&& from) noexcept
    : SoundBankRange() {
    *this = ::std::move(from);
  }

  inline SoundBankRange& operator=(const SoundBankRange& from) {
    CopyFrom(from);
    return *this;
  }
  inline SoundBankRange& operator=(SoundBankRange&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SoundBankRange& default_instance() {
    return *internal_default_instance();
  }
  static inline const SoundBankRange* internal_default_instance() {
    return reinterpret_cast<const SoundBankRange*>(
               &_SoundBankRange_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(SoundBankRange& a, SoundBankRange& b) {
    a.Swap(&b);
  }
  inline void Swap(SoundBankRange* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SoundBankRange* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SoundBankRange* New() const final {
    return CreateMaybeMessage<SoundBankRange>(nullptr);
  }

  SoundBankRange* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SoundBankRange>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SoundBankRange& from);
  void MergeFrom(const SoundBankRange& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SoundBankRange* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "idadebug.SoundBankRange";
  }
  protected:
  explicit SoundBankRange(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_debug_5fproto_5fz80_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBankMinFieldNumber = 1,
    kBankMaxFieldNumber = 2,
  };
  // uint32 bank_min = 1;
  void clear_bank_min();
  ::PROTOBUF_NAMESPACE_ID::uint32 bank_min() const;
  void set_bank_min(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bank_min() const;
  void _internal_set_bank_min(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 bank_max = 2;
  void clear_bank_max();
  ::PROTOBUF_NAMESPACE_ID::uint32 bank_max() const;
  void set_bank_max(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bank_max() const;
  void _internal_set_bank_max(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:idadebug.SoundBankRange)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bank_min_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bank_max_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_debug_5fproto_5fz80_2eproto;
};
// -------------------------------------------------------------------

class SoundBankMap_RangeEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<SoundBankMap_RangeEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::uint32, ::idadebug::SoundBankRange,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<SoundBankMap_RangeEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::uint32, ::idadebug::SoundBankRange,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  SoundBankMap_RangeEntry_DoNotUse();
  explicit constexpr SoundBankMap_RangeEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit SoundBankMap_RangeEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const SoundBankMap_RangeEntry_DoNotUse& other);
  static const SoundBankMap_RangeEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const SoundBankMap_RangeEntry_DoNotUse*>(&_SoundBankMap_RangeEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_debug_5fproto_5fz80_2eproto);
    return ::descriptor_table_debug_5fproto_5fz80_2eproto.file_level_metadata[11];
  }

  public:
};

// -------------------------------------------------------------------

class SoundBankMap PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:idadebug.SoundBankMap) */ {
 public:
  inline SoundBankMap() : SoundBankMap(nullptr) {}
  virtual ~SoundBankMap();
  explicit constexpr SoundBankMap(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SoundBankMap(const SoundBankMap& from);
  SoundBankMap(SoundBankMap&& from) noexcept
    : SoundBankMap() {
    *this = ::std::move(from);
  }

  inline SoundBankMap& operator=(const SoundBankMap& from) {
    CopyFrom(from);
    return *this;
  }
  inline SoundBankMap& operator=(SoundBankMap&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SoundBankMap& default_instance() {
    return *internal_default_instance();
  }
  static inline const SoundBankMap* internal_default_instance() {
    return reinterpret_cast<const SoundBankMap*>(
               &_SoundBankMap_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(SoundBankMap& a, SoundBankMap& b) {
    a.Swap(&b);
  }
  inline void Swap(SoundBankMap* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SoundBankMap* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SoundBankMap* New() const final {
    return CreateMaybeMessage<SoundBankMap>(nullptr);
  }

  SoundBankMap* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SoundBankMap>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SoundBankMap& from);
  void MergeFrom(const SoundBankMap& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SoundBankMap* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "idadebug.SoundBankMap";
  }
  protected:
  explicit SoundBankMap(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_debug_5fproto_5fz80_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kRangeFieldNumber = 1,
  };
  // map<uint32, .idadebug.SoundBankRange> range = 1;
  int range_size() const;
  private:
  int _internal_range_size() const;
  public:
  void clear_range();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::idadebug::SoundBankRange >&
      _internal_range() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::idadebug::SoundBankRange >*
      _internal_mutable_range();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::idadebug::SoundBankRange >&
      range() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::idadebug::SoundBankRange >*
      mutable_range();

  // @@protoc_insertion_point(class_scope:idadebug.SoundBankMap)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      SoundBankMap_RangeEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::uint32, ::idadebug::SoundBankRange,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> range_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_debug_5fproto_5fz80_2eproto;
};
// -------------------------------------------------------------------

class PauseChanged_ChangedEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<PauseChanged_ChangedEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<PauseChanged_ChangedEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32> SuperType;
  PauseChanged_ChangedEntry_DoNotUse();
  explicit constexpr PauseChanged_ChangedEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit PauseChanged_ChangedEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const PauseChanged_ChangedEntry_DoNotUse& other);
  static const PauseChanged_ChangedEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PauseChanged_ChangedEntry_DoNotUse*>(&_PauseChanged_ChangedEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_debug_5fproto_5fz80_2eproto);
    return ::descriptor_table_debug_5fproto_5fz80_2eproto.file_level_metadata[13];
  }

  public:
};

// -------------------------------------------------------------------

class PauseChanged PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:idadebug.PauseChanged) */ {
 public:
  inline PauseChanged() : PauseChanged(nullptr) {}
  virtual ~PauseChanged();
  explicit constexpr PauseChanged(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PauseChanged(const PauseChanged& from);
  PauseChanged(PauseChanged&& from) noexcept
    : PauseChanged() {
    *this = ::std::move(from);
  }

  inline PauseChanged& operator=(const PauseChanged& from) {
    CopyFrom(from);
    return *this;
  }
  inline PauseChanged& operator=(PauseChanged&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PauseChanged& default_instance() {
    return *internal_default_instance();
  }
  static inline const PauseChanged* internal_default_instance() {
    return reinterpret_cast<const PauseChanged*>(
               &_PauseChanged_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(PauseChanged& a, PauseChanged& b) {
    a.Swap(&b);
  }
  inline void Swap(PauseChanged* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PauseChanged* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PauseChanged* New() const final {
    return CreateMaybeMessage<PauseChanged>(nullptr);
  }

  PauseChanged* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PauseChanged>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PauseChanged& from);
  void MergeFrom(const PauseChanged& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PauseChanged* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "idadebug.PauseChanged";
  }
  protected:
  explicit PauseChanged(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_debug_5fproto_5fz80_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kChangedFieldNumber = 2,
    kAddressFieldNumber = 1,
  };
  // map<uint32, uint32> changed = 2;
  int changed_size() const;
  private:
  int _internal_changed_size() const;
  public:
  void clear_changed();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_changed() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_changed();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >&
      changed() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_changed();

  // uint32 address = 1;
  void clear_address();
  ::PROTOBUF_NAMESPACE_ID::uint32 address() const;
  void set_address(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_address() const;
  void _internal_set_address(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:idadebug.PauseChanged)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      PauseChanged_ChangedEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32> changed_;
  ::PROTOBUF_NAMESPACE_ID::uint32 address_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_debug_5fproto_5fz80_2eproto;
};
// -------------------------------------------------------------------

class Changed_ChangedEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Changed_ChangedEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Changed_ChangedEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32> SuperType;
  Changed_ChangedEntry_DoNotUse();
  explicit constexpr Changed_ChangedEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit Changed_ChangedEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Changed_ChangedEntry_DoNotUse& other);
  static const Changed_ChangedEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Changed_ChangedEntry_DoNotUse*>(&_Changed_ChangedEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_debug_5fproto_5fz80_2eproto);
    return ::descriptor_table_debug_5fproto_5fz80_2eproto.file_level_metadata[15];
  }

  public:
};

// -------------------------------------------------------------------

class Changed PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:idadebug.Changed) */ {
 public:
  inline Changed() : Changed(nullptr) {}
  virtual ~Changed();
  explicit constexpr Changed(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Changed(const Changed& from);
  Changed(Changed&& from) noexcept
    : Changed() {
    *this = ::std::move(from);
  }

  inline Changed& operator=(const Changed& from) {
    CopyFrom(from);
    return *this;
  }
  inline Changed& operator=(Changed&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Changed& default_instance() {
    return *internal_default_instance();
  }
  static inline const Changed* internal_default_instance() {
    return reinterpret_cast<const Changed*>(
               &_Changed_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(Changed& a, Changed& b) {
    a.Swap(&b);
  }
  inline void Swap(Changed* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Changed* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Changed* New() const final {
    return CreateMaybeMessage<Changed>(nullptr);
  }

  Changed* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Changed>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Changed& from);
  void MergeFrom(const Changed& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Changed* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "idadebug.Changed";
  }
  protected:
  explicit Changed(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_debug_5fproto_5fz80_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kChangedFieldNumber = 1,
  };
  // map<uint32, uint32> changed = 1;
  int changed_size() const;
  private:
  int _internal_changed_size() const;
  public:
  void clear_changed();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_changed() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_changed();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >&
      changed() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_changed();

  // @@protoc_insertion_point(class_scope:idadebug.Changed)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Changed_ChangedEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32> changed_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_debug_5fproto_5fz80_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GpReg

// .idadebug.GpRegsEnum reg = 1;
inline void GpReg::clear_reg() {
  reg_ = 0;
}
inline ::idadebug::GpRegsEnum GpReg::_internal_reg() const {
  return static_cast< ::idadebug::GpRegsEnum >(reg_);
}
inline ::idadebug::GpRegsEnum GpReg::reg() const {
  // @@protoc_insertion_point(field_get:idadebug.GpReg.reg)
  return _internal_reg();
}
inline void GpReg::_internal_set_reg(::idadebug::GpRegsEnum value) {
  
  reg_ = value;
}
inline void GpReg::set_reg(::idadebug::GpRegsEnum value) {
  _internal_set_reg(value);
  // @@protoc_insertion_point(field_set:idadebug.GpReg.reg)
}

// -------------------------------------------------------------------

// GpRegs

// uint32 A = 1;
inline void GpRegs::clear_a() {
  a_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::_internal_a() const {
  return a_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::a() const {
  // @@protoc_insertion_point(field_get:idadebug.GpRegs.A)
  return _internal_a();
}
inline void GpRegs::_internal_set_a(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  a_ = value;
}
inline void GpRegs::set_a(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_a(value);
  // @@protoc_insertion_point(field_set:idadebug.GpRegs.A)
}

// uint32 AF = 2;
inline void GpRegs::clear_af() {
  af_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::_internal_af() const {
  return af_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::af() const {
  // @@protoc_insertion_point(field_get:idadebug.GpRegs.AF)
  return _internal_af();
}
inline void GpRegs::_internal_set_af(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  af_ = value;
}
inline void GpRegs::set_af(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_af(value);
  // @@protoc_insertion_point(field_set:idadebug.GpRegs.AF)
}

// uint32 B = 3;
inline void GpRegs::clear_b() {
  b_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::_internal_b() const {
  return b_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::b() const {
  // @@protoc_insertion_point(field_get:idadebug.GpRegs.B)
  return _internal_b();
}
inline void GpRegs::_internal_set_b(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  b_ = value;
}
inline void GpRegs::set_b(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_b(value);
  // @@protoc_insertion_point(field_set:idadebug.GpRegs.B)
}

// uint32 C = 4;
inline void GpRegs::clear_c() {
  c_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::_internal_c() const {
  return c_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::c() const {
  // @@protoc_insertion_point(field_get:idadebug.GpRegs.C)
  return _internal_c();
}
inline void GpRegs::_internal_set_c(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  c_ = value;
}
inline void GpRegs::set_c(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_c(value);
  // @@protoc_insertion_point(field_set:idadebug.GpRegs.C)
}

// uint32 BC = 5;
inline void GpRegs::clear_bc() {
  bc_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::_internal_bc() const {
  return bc_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::bc() const {
  // @@protoc_insertion_point(field_get:idadebug.GpRegs.BC)
  return _internal_bc();
}
inline void GpRegs::_internal_set_bc(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  bc_ = value;
}
inline void GpRegs::set_bc(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bc(value);
  // @@protoc_insertion_point(field_set:idadebug.GpRegs.BC)
}

// uint32 D = 6;
inline void GpRegs::clear_d() {
  d_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::_internal_d() const {
  return d_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::d() const {
  // @@protoc_insertion_point(field_get:idadebug.GpRegs.D)
  return _internal_d();
}
inline void GpRegs::_internal_set_d(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  d_ = value;
}
inline void GpRegs::set_d(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_d(value);
  // @@protoc_insertion_point(field_set:idadebug.GpRegs.D)
}

// uint32 E = 7;
inline void GpRegs::clear_e() {
  e_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::_internal_e() const {
  return e_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::e() const {
  // @@protoc_insertion_point(field_get:idadebug.GpRegs.E)
  return _internal_e();
}
inline void GpRegs::_internal_set_e(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  e_ = value;
}
inline void GpRegs::set_e(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_e(value);
  // @@protoc_insertion_point(field_set:idadebug.GpRegs.E)
}

// uint32 DE = 8;
inline void GpRegs::clear_de() {
  de_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::_internal_de() const {
  return de_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::de() const {
  // @@protoc_insertion_point(field_get:idadebug.GpRegs.DE)
  return _internal_de();
}
inline void GpRegs::_internal_set_de(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  de_ = value;
}
inline void GpRegs::set_de(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_de(value);
  // @@protoc_insertion_point(field_set:idadebug.GpRegs.DE)
}

// uint32 H = 9;
inline void GpRegs::clear_h() {
  h_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::_internal_h() const {
  return h_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::h() const {
  // @@protoc_insertion_point(field_get:idadebug.GpRegs.H)
  return _internal_h();
}
inline void GpRegs::_internal_set_h(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  h_ = value;
}
inline void GpRegs::set_h(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_h(value);
  // @@protoc_insertion_point(field_set:idadebug.GpRegs.H)
}

// uint32 L = 10;
inline void GpRegs::clear_l() {
  l_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::_internal_l() const {
  return l_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::l() const {
  // @@protoc_insertion_point(field_get:idadebug.GpRegs.L)
  return _internal_l();
}
inline void GpRegs::_internal_set_l(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  l_ = value;
}
inline void GpRegs::set_l(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_l(value);
  // @@protoc_insertion_point(field_set:idadebug.GpRegs.L)
}

// uint32 HL = 11;
inline void GpRegs::clear_hl() {
  hl_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::_internal_hl() const {
  return hl_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::hl() const {
  // @@protoc_insertion_point(field_get:idadebug.GpRegs.HL)
  return _internal_hl();
}
inline void GpRegs::_internal_set_hl(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  hl_ = value;
}
inline void GpRegs::set_hl(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hl(value);
  // @@protoc_insertion_point(field_set:idadebug.GpRegs.HL)
}

// uint32 IXH = 12;
inline void GpRegs::clear_ixh() {
  ixh_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::_internal_ixh() const {
  return ixh_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::ixh() const {
  // @@protoc_insertion_point(field_get:idadebug.GpRegs.IXH)
  return _internal_ixh();
}
inline void GpRegs::_internal_set_ixh(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ixh_ = value;
}
inline void GpRegs::set_ixh(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ixh(value);
  // @@protoc_insertion_point(field_set:idadebug.GpRegs.IXH)
}

// uint32 IXL = 13;
inline void GpRegs::clear_ixl() {
  ixl_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::_internal_ixl() const {
  return ixl_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::ixl() const {
  // @@protoc_insertion_point(field_get:idadebug.GpRegs.IXL)
  return _internal_ixl();
}
inline void GpRegs::_internal_set_ixl(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ixl_ = value;
}
inline void GpRegs::set_ixl(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ixl(value);
  // @@protoc_insertion_point(field_set:idadebug.GpRegs.IXL)
}

// uint32 IX = 14;
inline void GpRegs::clear_ix() {
  ix_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::_internal_ix() const {
  return ix_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::ix() const {
  // @@protoc_insertion_point(field_get:idadebug.GpRegs.IX)
  return _internal_ix();
}
inline void GpRegs::_internal_set_ix(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ix_ = value;
}
inline void GpRegs::set_ix(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ix(value);
  // @@protoc_insertion_point(field_set:idadebug.GpRegs.IX)
}

// uint32 IYH = 15;
inline void GpRegs::clear_iyh() {
  iyh_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::_internal_iyh() const {
  return iyh_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::iyh() const {
  // @@protoc_insertion_point(field_get:idadebug.GpRegs.IYH)
  return _internal_iyh();
}
inline void GpRegs::_internal_set_iyh(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  iyh_ = value;
}
inline void GpRegs::set_iyh(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_iyh(value);
  // @@protoc_insertion_point(field_set:idadebug.GpRegs.IYH)
}

// uint32 IYL = 16;
inline void GpRegs::clear_iyl() {
  iyl_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::_internal_iyl() const {
  return iyl_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::iyl() const {
  // @@protoc_insertion_point(field_get:idadebug.GpRegs.IYL)
  return _internal_iyl();
}
inline void GpRegs::_internal_set_iyl(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  iyl_ = value;
}
inline void GpRegs::set_iyl(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_iyl(value);
  // @@protoc_insertion_point(field_set:idadebug.GpRegs.IYL)
}

// uint32 IY = 17;
inline void GpRegs::clear_iy() {
  iy_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::_internal_iy() const {
  return iy_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::iy() const {
  // @@protoc_insertion_point(field_get:idadebug.GpRegs.IY)
  return _internal_iy();
}
inline void GpRegs::_internal_set_iy(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  iy_ = value;
}
inline void GpRegs::set_iy(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_iy(value);
  // @@protoc_insertion_point(field_set:idadebug.GpRegs.IY)
}

// uint32 AF2 = 18;
inline void GpRegs::clear_af2() {
  af2_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::_internal_af2() const {
  return af2_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::af2() const {
  // @@protoc_insertion_point(field_get:idadebug.GpRegs.AF2)
  return _internal_af2();
}
inline void GpRegs::_internal_set_af2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  af2_ = value;
}
inline void GpRegs::set_af2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_af2(value);
  // @@protoc_insertion_point(field_set:idadebug.GpRegs.AF2)
}

// uint32 BC2 = 19;
inline void GpRegs::clear_bc2() {
  bc2_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::_internal_bc2() const {
  return bc2_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::bc2() const {
  // @@protoc_insertion_point(field_get:idadebug.GpRegs.BC2)
  return _internal_bc2();
}
inline void GpRegs::_internal_set_bc2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  bc2_ = value;
}
inline void GpRegs::set_bc2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bc2(value);
  // @@protoc_insertion_point(field_set:idadebug.GpRegs.BC2)
}

// uint32 DE2 = 20;
inline void GpRegs::clear_de2() {
  de2_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::_internal_de2() const {
  return de2_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::de2() const {
  // @@protoc_insertion_point(field_get:idadebug.GpRegs.DE2)
  return _internal_de2();
}
inline void GpRegs::_internal_set_de2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  de2_ = value;
}
inline void GpRegs::set_de2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_de2(value);
  // @@protoc_insertion_point(field_set:idadebug.GpRegs.DE2)
}

// uint32 HL2 = 21;
inline void GpRegs::clear_hl2() {
  hl2_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::_internal_hl2() const {
  return hl2_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::hl2() const {
  // @@protoc_insertion_point(field_get:idadebug.GpRegs.HL2)
  return _internal_hl2();
}
inline void GpRegs::_internal_set_hl2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  hl2_ = value;
}
inline void GpRegs::set_hl2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hl2(value);
  // @@protoc_insertion_point(field_set:idadebug.GpRegs.HL2)
}

// uint32 I = 22;
inline void GpRegs::clear_i() {
  i_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::_internal_i() const {
  return i_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::i() const {
  // @@protoc_insertion_point(field_get:idadebug.GpRegs.I)
  return _internal_i();
}
inline void GpRegs::_internal_set_i(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  i_ = value;
}
inline void GpRegs::set_i(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_i(value);
  // @@protoc_insertion_point(field_set:idadebug.GpRegs.I)
}

// uint32 R = 23;
inline void GpRegs::clear_r() {
  r_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::_internal_r() const {
  return r_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::r() const {
  // @@protoc_insertion_point(field_get:idadebug.GpRegs.R)
  return _internal_r();
}
inline void GpRegs::_internal_set_r(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  r_ = value;
}
inline void GpRegs::set_r(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_r(value);
  // @@protoc_insertion_point(field_set:idadebug.GpRegs.R)
}

// uint32 SP = 24;
inline void GpRegs::clear_sp() {
  sp_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::_internal_sp() const {
  return sp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::sp() const {
  // @@protoc_insertion_point(field_get:idadebug.GpRegs.SP)
  return _internal_sp();
}
inline void GpRegs::_internal_set_sp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  sp_ = value;
}
inline void GpRegs::set_sp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_sp(value);
  // @@protoc_insertion_point(field_set:idadebug.GpRegs.SP)
}

// uint32 IP = 25;
inline void GpRegs::clear_ip() {
  ip_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::_internal_ip() const {
  return ip_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::ip() const {
  // @@protoc_insertion_point(field_get:idadebug.GpRegs.IP)
  return _internal_ip();
}
inline void GpRegs::_internal_set_ip(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ip_ = value;
}
inline void GpRegs::set_ip(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ip(value);
  // @@protoc_insertion_point(field_set:idadebug.GpRegs.IP)
}

// uint32 BANK = 26;
inline void GpRegs::clear_bank() {
  bank_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::_internal_bank() const {
  return bank_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegs::bank() const {
  // @@protoc_insertion_point(field_get:idadebug.GpRegs.BANK)
  return _internal_bank();
}
inline void GpRegs::_internal_set_bank(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  bank_ = value;
}
inline void GpRegs::set_bank(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bank(value);
  // @@protoc_insertion_point(field_set:idadebug.GpRegs.BANK)
}

// -------------------------------------------------------------------

// GpRegValue

// .idadebug.GpRegsEnum index = 1;
inline void GpRegValue::clear_index() {
  index_ = 0;
}
inline ::idadebug::GpRegsEnum GpRegValue::_internal_index() const {
  return static_cast< ::idadebug::GpRegsEnum >(index_);
}
inline ::idadebug::GpRegsEnum GpRegValue::index() const {
  // @@protoc_insertion_point(field_get:idadebug.GpRegValue.index)
  return _internal_index();
}
inline void GpRegValue::_internal_set_index(::idadebug::GpRegsEnum value) {
  
  index_ = value;
}
inline void GpRegValue::set_index(::idadebug::GpRegsEnum value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:idadebug.GpRegValue.index)
}

// uint32 value = 2;
inline void GpRegValue::clear_value() {
  value_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegValue::_internal_value() const {
  return value_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpRegValue::value() const {
  // @@protoc_insertion_point(field_get:idadebug.GpRegValue.value)
  return _internal_value();
}
inline void GpRegValue::_internal_set_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  value_ = value;
}
inline void GpRegValue::set_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:idadebug.GpRegValue.value)
}

// -------------------------------------------------------------------

// MemoryAS

// uint32 address = 1;
inline void MemoryAS::clear_address() {
  address_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MemoryAS::_internal_address() const {
  return address_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MemoryAS::address() const {
  // @@protoc_insertion_point(field_get:idadebug.MemoryAS.address)
  return _internal_address();
}
inline void MemoryAS::_internal_set_address(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  address_ = value;
}
inline void MemoryAS::set_address(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_address(value);
  // @@protoc_insertion_point(field_set:idadebug.MemoryAS.address)
}

// uint32 size = 2;
inline void MemoryAS::clear_size() {
  size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MemoryAS::_internal_size() const {
  return size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MemoryAS::size() const {
  // @@protoc_insertion_point(field_get:idadebug.MemoryAS.size)
  return _internal_size();
}
inline void MemoryAS::_internal_set_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  size_ = value;
}
inline void MemoryAS::set_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:idadebug.MemoryAS.size)
}

// -------------------------------------------------------------------

// MemoryAD

// uint32 address = 1;
inline void MemoryAD::clear_address() {
  address_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MemoryAD::_internal_address() const {
  return address_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MemoryAD::address() const {
  // @@protoc_insertion_point(field_get:idadebug.MemoryAD.address)
  return _internal_address();
}
inline void MemoryAD::_internal_set_address(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  address_ = value;
}
inline void MemoryAD::set_address(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_address(value);
  // @@protoc_insertion_point(field_set:idadebug.MemoryAD.address)
}

// bytes data = 2;
inline void MemoryAD::clear_data() {
  data_.ClearToEmpty();
}
inline const std::string& MemoryAD::data() const {
  // @@protoc_insertion_point(field_get:idadebug.MemoryAD.data)
  return _internal_data();
}
inline void MemoryAD::set_data(const std::string& value) {
  _internal_set_data(value);
  // @@protoc_insertion_point(field_set:idadebug.MemoryAD.data)
}
inline std::string* MemoryAD::mutable_data() {
  // @@protoc_insertion_point(field_mutable:idadebug.MemoryAD.data)
  return _internal_mutable_data();
}
inline const std::string& MemoryAD::_internal_data() const {
  return data_.Get();
}
inline void MemoryAD::_internal_set_data(const std::string& value) {
  
  data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MemoryAD::set_data(std::string&& value) {
  
  data_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:idadebug.MemoryAD.data)
}
inline void MemoryAD::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:idadebug.MemoryAD.data)
}
inline void MemoryAD::set_data(const void* value,
    size_t size) {
  
  data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:idadebug.MemoryAD.data)
}
inline std::string* MemoryAD::_internal_mutable_data() {
  
  return data_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MemoryAD::release_data() {
  // @@protoc_insertion_point(field_release:idadebug.MemoryAD.data)
  return data_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MemoryAD::set_allocated_data(std::string* data) {
  if (data != nullptr) {
    
  } else {
    
  }
  data_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), data,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:idadebug.MemoryAD.data)
}

// -------------------------------------------------------------------

// DbgBreakpoint

// .idadebug.BpType type = 1;
inline void DbgBreakpoint::clear_type() {
  type_ = 0;
}
inline ::idadebug::BpType DbgBreakpoint::_internal_type() const {
  return static_cast< ::idadebug::BpType >(type_);
}
inline ::idadebug::BpType DbgBreakpoint::type() const {
  // @@protoc_insertion_point(field_get:idadebug.DbgBreakpoint.type)
  return _internal_type();
}
inline void DbgBreakpoint::_internal_set_type(::idadebug::BpType value) {
  
  type_ = value;
}
inline void DbgBreakpoint::set_type(::idadebug::BpType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:idadebug.DbgBreakpoint.type)
}

// uint32 bstart = 2;
inline void DbgBreakpoint::clear_bstart() {
  bstart_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DbgBreakpoint::_internal_bstart() const {
  return bstart_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DbgBreakpoint::bstart() const {
  // @@protoc_insertion_point(field_get:idadebug.DbgBreakpoint.bstart)
  return _internal_bstart();
}
inline void DbgBreakpoint::_internal_set_bstart(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  bstart_ = value;
}
inline void DbgBreakpoint::set_bstart(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bstart(value);
  // @@protoc_insertion_point(field_set:idadebug.DbgBreakpoint.bstart)
}

// uint32 bend = 3;
inline void DbgBreakpoint::clear_bend() {
  bend_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DbgBreakpoint::_internal_bend() const {
  return bend_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DbgBreakpoint::bend() const {
  // @@protoc_insertion_point(field_get:idadebug.DbgBreakpoint.bend)
  return _internal_bend();
}
inline void DbgBreakpoint::_internal_set_bend(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  bend_ = value;
}
inline void DbgBreakpoint::set_bend(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bend(value);
  // @@protoc_insertion_point(field_set:idadebug.DbgBreakpoint.bend)
}

// bool enabled = 4;
inline void DbgBreakpoint::clear_enabled() {
  enabled_ = false;
}
inline bool DbgBreakpoint::_internal_enabled() const {
  return enabled_;
}
inline bool DbgBreakpoint::enabled() const {
  // @@protoc_insertion_point(field_get:idadebug.DbgBreakpoint.enabled)
  return _internal_enabled();
}
inline void DbgBreakpoint::_internal_set_enabled(bool value) {
  
  enabled_ = value;
}
inline void DbgBreakpoint::set_enabled(bool value) {
  _internal_set_enabled(value);
  // @@protoc_insertion_point(field_set:idadebug.DbgBreakpoint.enabled)
}

// bool is_forbid = 5;
inline void DbgBreakpoint::clear_is_forbid() {
  is_forbid_ = false;
}
inline bool DbgBreakpoint::_internal_is_forbid() const {
  return is_forbid_;
}
inline bool DbgBreakpoint::is_forbid() const {
  // @@protoc_insertion_point(field_get:idadebug.DbgBreakpoint.is_forbid)
  return _internal_is_forbid();
}
inline void DbgBreakpoint::_internal_set_is_forbid(bool value) {
  
  is_forbid_ = value;
}
inline void DbgBreakpoint::set_is_forbid(bool value) {
  _internal_set_is_forbid(value);
  // @@protoc_insertion_point(field_set:idadebug.DbgBreakpoint.is_forbid)
}

// -------------------------------------------------------------------

// DbgBreakpoints

// repeated .idadebug.DbgBreakpoint list = 1;
inline int DbgBreakpoints::_internal_list_size() const {
  return list_.size();
}
inline int DbgBreakpoints::list_size() const {
  return _internal_list_size();
}
inline void DbgBreakpoints::clear_list() {
  list_.Clear();
}
inline ::idadebug::DbgBreakpoint* DbgBreakpoints::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:idadebug.DbgBreakpoints.list)
  return list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::idadebug::DbgBreakpoint >*
DbgBreakpoints::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:idadebug.DbgBreakpoints.list)
  return &list_;
}
inline const ::idadebug::DbgBreakpoint& DbgBreakpoints::_internal_list(int index) const {
  return list_.Get(index);
}
inline const ::idadebug::DbgBreakpoint& DbgBreakpoints::list(int index) const {
  // @@protoc_insertion_point(field_get:idadebug.DbgBreakpoints.list)
  return _internal_list(index);
}
inline ::idadebug::DbgBreakpoint* DbgBreakpoints::_internal_add_list() {
  return list_.Add();
}
inline ::idadebug::DbgBreakpoint* DbgBreakpoints::add_list() {
  // @@protoc_insertion_point(field_add:idadebug.DbgBreakpoints.list)
  return _internal_add_list();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::idadebug::DbgBreakpoint >&
DbgBreakpoints::list() const {
  // @@protoc_insertion_point(field_list:idadebug.DbgBreakpoints.list)
  return list_;
}

// -------------------------------------------------------------------

// Callstack

// repeated uint32 callstack = 1;
inline int Callstack::_internal_callstack_size() const {
  return callstack_.size();
}
inline int Callstack::callstack_size() const {
  return _internal_callstack_size();
}
inline void Callstack::clear_callstack() {
  callstack_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Callstack::_internal_callstack(int index) const {
  return callstack_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Callstack::callstack(int index) const {
  // @@protoc_insertion_point(field_get:idadebug.Callstack.callstack)
  return _internal_callstack(index);
}
inline void Callstack::set_callstack(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  callstack_.Set(index, value);
  // @@protoc_insertion_point(field_set:idadebug.Callstack.callstack)
}
inline void Callstack::_internal_add_callstack(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  callstack_.Add(value);
}
inline void Callstack::add_callstack(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_callstack(value);
  // @@protoc_insertion_point(field_add:idadebug.Callstack.callstack)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Callstack::_internal_callstack() const {
  return callstack_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Callstack::callstack() const {
  // @@protoc_insertion_point(field_list:idadebug.Callstack.callstack)
  return _internal_callstack();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Callstack::_internal_mutable_callstack() {
  return &callstack_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Callstack::mutable_callstack() {
  // @@protoc_insertion_point(field_mutable_list:idadebug.Callstack.callstack)
  return _internal_mutable_callstack();
}

// -------------------------------------------------------------------

// AnyRegValue

// uint32 value = 1;
inline void AnyRegValue::clear_value() {
  value_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AnyRegValue::_internal_value() const {
  return value_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AnyRegValue::value() const {
  // @@protoc_insertion_point(field_get:idadebug.AnyRegValue.value)
  return _internal_value();
}
inline void AnyRegValue::_internal_set_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  value_ = value;
}
inline void AnyRegValue::set_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:idadebug.AnyRegValue.value)
}

// -------------------------------------------------------------------

// MemData

// bytes data = 1;
inline void MemData::clear_data() {
  data_.ClearToEmpty();
}
inline const std::string& MemData::data() const {
  // @@protoc_insertion_point(field_get:idadebug.MemData.data)
  return _internal_data();
}
inline void MemData::set_data(const std::string& value) {
  _internal_set_data(value);
  // @@protoc_insertion_point(field_set:idadebug.MemData.data)
}
inline std::string* MemData::mutable_data() {
  // @@protoc_insertion_point(field_mutable:idadebug.MemData.data)
  return _internal_mutable_data();
}
inline const std::string& MemData::_internal_data() const {
  return data_.Get();
}
inline void MemData::_internal_set_data(const std::string& value) {
  
  data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MemData::set_data(std::string&& value) {
  
  data_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:idadebug.MemData.data)
}
inline void MemData::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:idadebug.MemData.data)
}
inline void MemData::set_data(const void* value,
    size_t size) {
  
  data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:idadebug.MemData.data)
}
inline std::string* MemData::_internal_mutable_data() {
  
  return data_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MemData::release_data() {
  // @@protoc_insertion_point(field_release:idadebug.MemData.data)
  return data_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MemData::set_allocated_data(std::string* data) {
  if (data != nullptr) {
    
  } else {
    
  }
  data_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), data,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:idadebug.MemData.data)
}

// -------------------------------------------------------------------

// SoundBankRange

// uint32 bank_min = 1;
inline void SoundBankRange::clear_bank_min() {
  bank_min_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SoundBankRange::_internal_bank_min() const {
  return bank_min_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SoundBankRange::bank_min() const {
  // @@protoc_insertion_point(field_get:idadebug.SoundBankRange.bank_min)
  return _internal_bank_min();
}
inline void SoundBankRange::_internal_set_bank_min(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  bank_min_ = value;
}
inline void SoundBankRange::set_bank_min(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bank_min(value);
  // @@protoc_insertion_point(field_set:idadebug.SoundBankRange.bank_min)
}

// uint32 bank_max = 2;
inline void SoundBankRange::clear_bank_max() {
  bank_max_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SoundBankRange::_internal_bank_max() const {
  return bank_max_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SoundBankRange::bank_max() const {
  // @@protoc_insertion_point(field_get:idadebug.SoundBankRange.bank_max)
  return _internal_bank_max();
}
inline void SoundBankRange::_internal_set_bank_max(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  bank_max_ = value;
}
inline void SoundBankRange::set_bank_max(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bank_max(value);
  // @@protoc_insertion_point(field_set:idadebug.SoundBankRange.bank_max)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SoundBankMap

// map<uint32, .idadebug.SoundBankRange> range = 1;
inline int SoundBankMap::_internal_range_size() const {
  return range_.size();
}
inline int SoundBankMap::range_size() const {
  return _internal_range_size();
}
inline void SoundBankMap::clear_range() {
  range_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::idadebug::SoundBankRange >&
SoundBankMap::_internal_range() const {
  return range_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::idadebug::SoundBankRange >&
SoundBankMap::range() const {
  // @@protoc_insertion_point(field_map:idadebug.SoundBankMap.range)
  return _internal_range();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::idadebug::SoundBankRange >*
SoundBankMap::_internal_mutable_range() {
  return range_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::idadebug::SoundBankRange >*
SoundBankMap::mutable_range() {
  // @@protoc_insertion_point(field_mutable_map:idadebug.SoundBankMap.range)
  return _internal_mutable_range();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PauseChanged

// uint32 address = 1;
inline void PauseChanged::clear_address() {
  address_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PauseChanged::_internal_address() const {
  return address_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PauseChanged::address() const {
  // @@protoc_insertion_point(field_get:idadebug.PauseChanged.address)
  return _internal_address();
}
inline void PauseChanged::_internal_set_address(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  address_ = value;
}
inline void PauseChanged::set_address(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_address(value);
  // @@protoc_insertion_point(field_set:idadebug.PauseChanged.address)
}

// map<uint32, uint32> changed = 2;
inline int PauseChanged::_internal_changed_size() const {
  return changed_.size();
}
inline int PauseChanged::changed_size() const {
  return _internal_changed_size();
}
inline void PauseChanged::clear_changed() {
  changed_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >&
PauseChanged::_internal_changed() const {
  return changed_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >&
PauseChanged::changed() const {
  // @@protoc_insertion_point(field_map:idadebug.PauseChanged.changed)
  return _internal_changed();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >*
PauseChanged::_internal_mutable_changed() {
  return changed_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >*
PauseChanged::mutable_changed() {
  // @@protoc_insertion_point(field_mutable_map:idadebug.PauseChanged.changed)
  return _internal_mutable_changed();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Changed

// map<uint32, uint32> changed = 1;
inline int Changed::_internal_changed_size() const {
  return changed_.size();
}
inline int Changed::changed_size() const {
  return _internal_changed_size();
}
inline void Changed::clear_changed() {
  changed_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >&
Changed::_internal_changed() const {
  return changed_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >&
Changed::changed() const {
  // @@protoc_insertion_point(field_map:idadebug.Changed.changed)
  return _internal_changed();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >*
Changed::_internal_mutable_changed() {
  return changed_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >*
Changed::mutable_changed() {
  // @@protoc_insertion_point(field_mutable_map:idadebug.Changed.changed)
  return _internal_mutable_changed();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace idadebug

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::idadebug::GpRegsEnum> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::idadebug::GpRegsEnum>() {
  return ::idadebug::GpRegsEnum_descriptor();
}
template <> struct is_proto_enum< ::idadebug::BpType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::idadebug::BpType>() {
  return ::idadebug::BpType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_debug_5fproto_5fz80_2eproto
